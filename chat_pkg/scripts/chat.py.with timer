#!/usr/bin/env python3
###############################################################################
# Filename: chat.py
# Created : 23 Feb 2022
# Author  : Derek Ripper
# Purpose : 1- To test teh speech modules  stt aand tts.
#           2- also to sort out the controlling of the rbot NOT repeating what
#             it has just said!
#
# History:
#       None
###############################################################################
# Updates:
#
################################################################################
import rclpy
from rclpy.node     import Node
from std_msgs.msg   import String

# import python_support_library.text_colours     as
import  py_utils_pkg.text_colours     as TC
# simple routine to use instead of print() - to get colour coded messages for ERROR,INFO,RESULT, etc
prt = TC.Tc()

#code name - to be used in any warning/error msgs.
cname = "chat- "

class Chat(Node):

    def __init__(self):
        super().__init__('waffle')
        prt.debug(cname+"Enter __init__ chat.py ##########")
        self.pub_text_ = self.create_publisher(String, '/stt', 10)
        timer_period = .5 #secs
        self.timer = self.create_timer(timer_period, self.timer_callback)
        prt.debug(cname+"LEAVE __init__ chat.py ##########")

    def timer_callback(self):
        msg = String()
        msg.data = "does this bloddy work"
        self.pub_text_.publish(msg)
        prt.info(cname+"end of callback")
        
def main(args=None):
    prt.debug(cname+"Enter main")
    rclpy.init(args=args)
    waffle = Chat()
    rclpy.spin(waffle)

    # Destroy the node explicitly
    # (optional - otherwise it will be done automatically
    # when the garbage collector destroys the node object)s

if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        waffle.destroy_node()
        rclpy.shutdown()

        prt.blank()
        prt.warning(cname+" Cancelelld by user !")
